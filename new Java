//Prog 1
import java.util.Scanner;

public class ArmstrongNumbers {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the limit: ");
        int limit = input.nextInt();

        for (int i = 1; i <= limit; i++) {
            int sum = 0;
            int temp = i;
            int digits = String.valueOf(i).length();

            while (temp > 0) {
                int digit = temp % 10;
                sum += Math.pow(digit, digits);
                temp /= 10;
            }

            if (sum == i) {
                System.out.println(i);
            }
        }
    }
}

//prog 2
import java.util.Scanner;

public class FibonacciSeries {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the number of terms: ");
        int n = input.nextInt();

        int first = 0, second = 1;

        System.out.print("Fibonacci series up to " + n + " terms: ");

        for (int i = 1; i <= n; i++) {
            System.out.print(first + " ");

            int sum = first + second;
            first = second;
            second = sum;
        }
    }
}
//prog 3
import java.util.Scanner;

public class SwapNumbers {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the first number: ");
        int num1 = input.nextInt();
        System.out.print("Enter the second number: ");
        int num2 = input.nextInt();

        System.out.println("Before swapping: ");
        System.out.println("num1 = " + num1);
        System.out.println("num2 = " + num2);

        int temp = num1;
        num1 = num2;
        num2 = temp;

        System.out.println("After swapping: ");
        System.out.println("num1 = " + num1);
        System.out.println("num2 = " + num2);
    }
}
//prog 4
import java.util.Scanner;

public class VowelConsonantChecker {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter an alphabet: ");
        char ch = input.next().charAt(0);

        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' ||
            ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U') {
            System.out.println(ch + " is a vowel.");
        } else {
            System.out.println(ch + " is a consonant.");
        }
    }
}
//prog 5
import java.util.Scanner;

public class GCD {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the first number: ");
        int num1 = input.nextInt();
        System.out.print("Enter the second number: ");
        int num2 = input.nextInt();

        int gcd = 1;

        for (int i = 1; i <= num1 && i <= num2; i++) {
            if (num1 % i == 0 && num2 % i == 0) {
                gcd = i;
            }
        }

        System.out.println("GCD of " + num1 + " and " + num2 + " is: " + gcd);
    }
}
//prog 6
import java.util.Scanner;

public class LeapYear {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter a year: ");
        int year = input.nextInt();

        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {
            System.out.println(year + " is a leap year.");
        } else {
            System.out.println(year + " is not a leap year.");
        }
    }
}
//prog 7
import java.util.Scanner;

public class NeonNumber {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int num = input.nextInt();

        int square = num * num;
        int sumOfDigits = 0;

        while (square != 0) {
            int digit = square % 10;
            sumOfDigits += digit;
            square /= 10;
        }

        if (sumOfDigits == num) {
            System.out.println(num + " is a neon number.");
        } else {
            System.out.println(num + " is not a neon number.");
        }
    }
}
//prog 8
import java.util.Scanner;

public class EvenOrOdd {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int num = input.nextInt();

        if (num % 2 == 0) {
            System.out.println(num + " is even.");
        } else {
            System.out.println(num + " is odd.");
        }
    }
}
//prog 9
import java.util.Scanner;

public class TriangleArea {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the base of the triangle: ");
        double base = input.nextDouble();
        System.out.print("Enter the height of the triangle: ");
        double height = input.nextDouble();

        double area = (base * height) / 2;

        System.out.println("The area of the triangle is: " + area);
    }
}
//prog 10
import java.util.Scanner;

public class StringReverse {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = input.nextLine();

        String reverse = "";

        for (int i = str.length() - 1; i >= 0; i--) {
            reverse += str.charAt(i);
        }

        System.out.println("The reversed string is: " + reverse);
    }
}


//001
import java.util.Scanner;

public class QuadraticEquation {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter a: ");
        double a = input.nextDouble();
        System.out.print("Enter b: ");
        double b = input.nextDouble();
        System.out.print("Enter c: ");
        double c = input.nextDouble();

        double discriminant = b * b - 4 * a * c;

        if (discriminant > 0) {
            double root1 = (-b + Math.sqrt(discriminant)) / (2 * a);
            double root2 = (-b - Math.sqrt(discriminant)) / (2 * a);
            System.out.println("The equation has two real roots: " + root1 + " and " + root2);
        } else if (discriminant == 0) {
            double root = -b / (2 * a);
            System.out.println("The equation has one real root: " + root);
        } else {
            System.out.println("The equation has no real roots.");
        }
    }
}
//002
import java.util.*;
public class Student {
    String USN, NAME, Branch, Phone;
    public Student(String usn, String name, String branch, String phone ) {
        USN=usn;
        NAME=name;
        Branch=branch;
        Phone =phone;
    }
    public static void main(String []args) {
        Scanner input=new Scanner(System.in);
        int n= input.nextInt();
        Student [] st= new Student[n];
        String usn,name,branch,phone;
        for(int i=0; i<n; i++) {
            System.out.println("Student"+(i+1));
            usn=input.next();
            name=input.next();
            branch=input.next();
            phone=input.next();
            st[i]=new Student(usn,name,branch,phone);
        }
         System.out.println("Student details\n USN\tNAME\tBRANCH\tPHONE\t");
        for(int i=0; i<n; i++) {
            System.out.println(st[i].USN+"\t"+st[i].NAME+"\t"+st[i].Branch+"\t"+st[i].Phone+"\t");
        }
    }
}
//004
package Inheritance;

import java.io.*;
import java.util.Scanner;
class Staff
{
private int StaffId;
private String Name;
private String Phone;
private long Salary;
public Staff(int staffId,String name,String phone,long salary)
{

Name = name;
Phone = phone;
Salary = salary;
}
public void Display()
{
System.out.print("\t"+StaffId+"\t"+Name+"\t"+Phone+"\t"+Salary);
}
}
class Teaching extends Staff
{
private String Domain;
private int Publications;
public Teaching(int staffId, String name, String phone, long salary, String domain, int publications)
{
super(staffId, name, phone, salary);
Domain = domain;
Publications = publications;
}
public void Display()
{
super.Display();
System.out.print("\t"+Domain+"\t"+Publications+"\t\t"+"--"+"\t"+"--");
}
}
class Technical extends Staff
{
private String Skills;
public Technical(int staffId, String name, String phone, long salary, String skills)
{
super(staffId, name, phone, salary);
Skills = skills;
}
public void Display()
{
super.Display();
System.out.print("\t"+"--"+"\t"+"--"+"\t\t"+Skills+"\t"+"--");
}
}
class Contract extends Staff
{
private int Period;
public Contract(int staffId, String name, String phone, long salary, int period)
{
super(staffId, name, phone, salary);
this.Period = period;
}
public void Display()
{

super.Display();
System.out.print("\t"+"--"+"\t"+"--"+"\t\t"+"--"+"\t"+Period);
}
}
public class StaffManagement{
public static void main(String[] args)
{
int StaffId;
String Name,Phone;
long Salary;
String Domain;
int Publications;
String Skills;
int Period;
Scanner sc=new Scanner(System.in);
Staff staff[]=new Staff[50];
System.out.println("Enter number of Teaching Staff : ");
int n = sc.nextInt();
for(int i=1;i<=n;i++)
{
System.out.println("Enter " + i + " Teaching Staff details:”+ Staff ID, Name, Phone, Salary,Domain,Publication");
StaffId = sc.nextInt();
Name = sc.next();
Phone = sc.next();
Salary = sc.nextLong();
Domain = sc.next();
Publications = sc.nextInt();
staff[i]=new Teaching(StaffId, Name, Phone, Salary, Domain,Publications);
}
System.out.println("Enter number of Technical Staff : ");
int m = sc.nextInt();
for(int i=n+1;i<=m+n;i++)
{
System.out.println("Enter " + i + " Technical Staff details :Staff ID,Name,Phone, Salary, Skills");
StaffId = sc.nextInt();
Name = sc.next();
Phone = sc.next();
Salary = sc.nextLong();
Skills = sc.next();
staff[i]=new Technical(StaffId,Name,Phone,Salary,Skills);
}
System.out.println("Enter number of Contract Staff : ");
int p = sc.nextInt();
for(int i=n+m+1;i<=m+n+p;i++)
{

System.out.println("Enter " + i + " Contract Staff details:”+StaffID,Name, Phone, Salary, Period");
StaffId = sc.nextInt();
Name = sc.next();
Phone = sc.next();
Salary = sc.nextLong();
Period = sc.nextInt();
staff[i]=new Contract(StaffId,Name,Phone,Salary,Period);
}
System.out.println("Staff ID \tName \tPhone \tSalary \tDomain\tPublication \tSkills \tPeriod");
for(int i=1;i<=n+m+p;i++)
{
staff[i].Display();
System.out.println();
}
}
}
//005

package Inheritance.converter;

class room {
float L;
float breadth;
float area;
room(float length)
{
	L=this.breadth=length;
	;
}
room(float length,float breadth)
{
	L=length;
	this.breadth=breadth;
	
}
void calcArea()
{
	area=L*breadth;
}
float addArea()
{
	float totalarea=area+20.0f;
	return totalarea;
}
void display()
{
	System.out.println("Area = "+area);
	
}
void display(float a)
{
	System.out.println("Total Area = "+a);
	
}
}

public class CurrencyConverter {
	public static void main(String[] args)
	{
		room square=new room(20.5f);
		room rectangle=new room(15.2f,6.5f);
		square.calcArea();
		rectangle.calcArea();
		float squaretotalarea=square.addArea();
		float rectangletotalarea=rectangle.addArea();
		square.display();
		rectangle.display();
		square.display(squaretotalarea);
		rectangle.display(rectangletotalarea);
		
	}

}
//006
package CurrencyConverter;

public class CurrencyConverter {
	
		public double dollortoinr(double x)
		{
			double inr=x*67.86;return inr;
		}
		public double inrtodollor(double x)
		{
			double dollor=x/67.86;return dollor;
		}
		public double eurotoinr(double x)
		{
			double inr=x*79.18;return inr;
		}
		public double inrtoeuro(double x)
		{
			double euro=x/79.18;return euro;
		}
		public double yentoinr(double x)
		{
			double inr =x*0.62;return inr;
		}
		public double inrtoyen(double x)
		{
			double yen=x/0.62;return yen;
		}
	
}

package DistanceConverter;

public class DistanceConverter {

	
		public double metertokm(double x)
		{
			double km=x*0.001; return km;
		}
		public double kmtometer(double x)
		{
			double meter=x/0.001; return meter;
		}
		public double milestokm(double x)
		{
			double km=x*1.60934; return km;
		}
		public double kmtomiles(double x)
		{
			double miles=x/1.60394; return miles;
		}

	}

package TimeConverter;

public class TimeConverter {
	
		public double hourstominutes(double x)
		{
			double minutes=x*60; return minutes;
		}
		public double minutestohours(double x)
		{
			double hours=x/60; return hours;
		}
		public double hourstoseconds(double x)
		{
			double seconds=x*3600; return seconds;
		}
		public double secondstohours(double x)
		{
			double hours=x/3600; return hours;
		}

	}

package Converter;


	

	import DistanceConverter.*;
	import TimeConverter.*;
	
	import java.util.*;
	import CurrencyConverter.*;
	public class Converter {
		public static void main(String args[])
		{
			System.out.println("1.Currency Converter");
			System.out.println("2.Distance Converter");
			System.out.println("3.Time Converter");
			Converter cr=new Converter();
			Scanner c=new Scanner(System.in);
			int choice=c.nextInt();
			String op=null;
			switch(choice)
			{
			case 1: cr.Currency();
			break;
			case 2: cr.Distance();
			break;
			case 3: cr.Time(); break;
			default:
				System.out.println("Invalid case");
				return;
			}
		}
		

	public void Currency()
	{
		Scanner in=new Scanner(System.in);
		System.out.println("Welcome to Currency Converter");
		System.out.println("Enter the amount:");
		double amt=in.nextInt();
		CurrencyConverter cc=new CurrencyConverter();
		System.out.println("DOLLAR="+amt+" is INR="+cc.dollortoinr(amt));
		System.out.println("INR="+amt+" is DOLLAR="+cc.inrtodollor(amt));
		System.out.println("EURO="+amt+" is INR="+cc.eurotoinr(amt));
		System.out.println("YEn="+amt+" is INR="+cc.yentoinr(amt));
		System.out.println("DOLLAR="+amt+" is INR="+cc.inrtoyen(amt));
	}
	public void Distance()
	{
		Scanner in=new Scanner(System.in);
		System.out.println("Welcome to Distance Converter");
		System.out.println("Enter the distance: ");
		double dis=in.nextInt();
		DistanceConverter dd=new DistanceConverter();
		System.out.println("METER="+dis+" is KM="+dd.metertokm(dis));
		System.out.println("KM="+dis+" is METER="+dd.kmtometer(dis));
		System.out.println("MILES="+dis+" is KM="+dd.milestokm(dis));
		System.out.println("KM="+dis+" is MILES="+dd.kmtomiles(dis));
		
		
		
	}
	public void Time()
	{
		Scanner out=new Scanner(System.in);
		System.out.println("Welcome to Time Converter");
		System.out.println("Enter the time: ");
		double tim=out.nextInt();
		TimeConverter tt=new TimeConverter();
		System.out.println("HOURS="+tim+" is MINUTES="+tt.hourstominutes(tim));
		System.out.println("MINUTES="+tim+" is HOURS="+tt.minutestohours(tim));
		System.out.println("HOURS="+tim+" is KM="+tt.hourstoseconds(tim));
		System.out.println("KM="+tim+" is MILES="+tt.secondstohours(tim));	
	}
 
	}
//007



	
	
	





//008

import java.util.Random;

public class MultiThreadExample {

    public static void main(String[] args) {
        RandomNumberGenerator rng = new RandomNumberGenerator();
        SquarePrinter sp = new SquarePrinter();
        CubePrinter cp = new CubePrinter();
        
        rng.start();
        sp.start();
        cp.start();
    }
    
    static class RandomNumberGenerator extends Thread {
        public void run() {
            Random rand = new Random();
            while (true) {
                int num = rand.nextInt(100);
                System.out.println("Generated Number: " + num);
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    
    static class SquarePrinter extends Thread {
        public void run() {
            while (true) {
                int num = RandomNumberGenerator.rand.nextInt(100);
                System.out.println("Square of " + num + " is " + (num * num));
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    
    static class CubePrinter extends Thread {
        public void run() {
            while (true) {
                int num = RandomNumberGenerator.rand.nextInt(100);
                System.out.println("Cube of " + num + " is " + (num * num * num));
                try {
                    Thread.sleep(3000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }

}
//009

import java.util.ArrayList;
import java.util.Scanner;

public class StringOperations {
    public static void main(String[] args) {
        ArrayList<String> stringList = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        int choice = 0;
        while (choice != 5) {
            System.out.println("\nMENU");
            System.out.println("1. Append a string");
            System.out.println("2. Insert a string at a particular index");
            System.out.println("3. Search a string");
            System.out.println("4. List all strings that start with a given letter");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");

            choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline character

            switch (choice) {
                case 1:
                    System.out.print("Enter a string to append: ");
                    String appendStr = scanner.nextLine();
                    stringList.add(appendStr);
                    System.out.println("String \"" + appendStr + "\" appended to the list.");
                    break;

                case 2:
                    System.out.print("Enter a string to insert: ");
                    String insertStr = scanner.nextLine();

                    System.out.print("Enter the index to insert at: ");
                    int insertIndex = scanner.nextInt();
                    scanner.nextLine(); // Consume newline character

                    if (insertIndex < 0 || insertIndex > stringList.size()) {
                        System.out.println("Invalid index.");
                    } else {
                        stringList.add(insertIndex, insertStr);
                        System.out.println("String \"" + insertStr + "\" inserted at index " + insertIndex + ".");
                    }
                    break;

                case 3:
                    System.out.print("Enter a string to search: ");
                    String searchString = scanner.nextLine();

                    if (stringList.contains(searchString)) {
                        System.out.println("String \"" + searchString + "\" found at index " + stringList.indexOf(searchString) + ".");
                    } else {
                        System.out.println("String \"" + searchString + "\" not found in the list.");
                    }
                    break;

                case 4:
                    System.out.print("Enter the letter to filter strings: ");
                    char filterLetter = scanner.nextLine().charAt(0);

                    System.out.println("Strings that start with letter '" + filterLetter + "':");
                    for (String str : stringList) {
                        if (str.charAt(0) == filterLetter) {
                            System.out.println(str);
                        }
                    }
                    break;

                case 5:
                    System.out.println("Exiting the program.");
                    break;

                default:
                    System.out.println("Invalid choice.");
            }
        }

        scanner.close();
    }
}

//10

import java.util.Scanner;

public class DivideTwoNumbers {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the value of a: ");
        int a = sc.nextInt();
        System.out.print("Enter the value of b: ");
        int b = sc.nextInt();
        try {
            if (b == 0) {
                throw new ArithmeticException("Error: Division by zero is undefined");
            } else {
                int result = a / b;
                System.out.println("The result of a/b is: " + result);
            }
        } catch (ArithmeticException ex) {
            System.out.println(ex.getMessage());
        }
        sc.close();
    }
}
//011

import java.io.File;

public class FileInfo {
    public static void main(String[] args) {
        // Get the file name from the user
        String fileName = "example.txt"; // Replace this with your own file name

        // Create a File object
        File file = new File(fileName);

        // Check if the file exists
        if (file.exists()) {
            System.out.println("File exists.");

            // Check if the file is readable
            if (file.canRead()) {
                System.out.println("File is readable.");
            } else {
                System.out.println("File is not readable.");
            }

            // Check if the file is writable
            if (file.canWrite()) {
                System.out.println("File is writable.");
            } else {
                System.out.println("File is not writable.");
            }

            // Get the type of file
            String fileType = getFileType(fileName);
            System.out.println("File type: " + fileType);

            // Get the length of the file in bytes
            long fileSize = file.length();
            System.out.println("File size: " + fileSize + " bytes");
        } else {
            System.out.println("File does not exist.");
        }
    }

    // Helper function to get the type of file
    private static String getFileType(String fileName) {
        String fileType = "Unknown";
        int dotIndex = fileName.lastIndexOf(".");
        if (dotIndex > 0 && dotIndex < fileName.length() - 1) {
            String extension = fileName.substring(dotIndex + 1).toLowerCase();
            switch (extension) {
                case "txt":
                    fileType = "Text";
                    break;
                case "pdf":
                    fileType = "PDF";
                    break;
                case "doc":
                case "docx":
                    fileType = "Microsoft Word";
                    break;
                case "xls":
                case "xlsx":
                    fileType = "Microsoft Excel";
                    break;
                case "ppt":
                case "pptx":
                    fileType = "Microsoft PowerPoint";
                    break;
                default:
                    fileType = "Unknown";
                    break;
            }
        }
        return fileType;
    }
}


